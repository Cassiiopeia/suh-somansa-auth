name: PUBLISH-SUH-NEXUS-REPOSITORY
on:
  push:
    branches:
      - deploy  # deploy 브랜치 푸시될 때 트리거
  workflow_dispatch:  # 수동 트리거 허용

permissions:
  contents: write  # README.md 업데이트를 위한 권한

jobs:
  # Job 1: Nexus에 라이브러리 배포
  publish-nexus:
    name: Nexus Repository 배포
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 현재 버전 추출
        id: get_version
        run: |
          if [ -f "CHANGELOG.json" ]; then
            VERSION=$(jq -r '.metadata.currentVersion // .currentVersion' CHANGELOG.json)
            echo "Found version in CHANGELOG.json: $VERSION"
          else
            VERSION=$(grep "version = '" build.gradle | sed "s/version = '//" | sed "s/'//")
            echo "Found version in build.gradle: $VERSION"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "📦 배포할 버전: $VERSION"

      - name: gradle.properties 생성
        run: |
          echo -e "${{ secrets.GRADLE_PROPERTIES }}" > gradle.properties

      - name: gradle.properties 확인 (디버그)
        run: cat gradle.properties | grep -v password

      - name: Nexus Repository에 배포
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          echo "🚀 suh-somansa-auth v$VERSION Nexus 배포 시작..."
          ./gradlew publish -Pversion=$VERSION
          echo "✅ Nexus Repository 배포 완료!"

  # Job 2: README.md 업데이트 (Job 1 완료 후 실행)
  update-readme:
    name: README.md 업데이트
    runs-on: ubuntu-latest
    needs: publish-nexus
    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: README.md 버전 업데이트
        run: |
          VERSION="${{ needs.publish-nexus.outputs.version }}"
          echo "📝 README.md 버전을 $VERSION으로 업데이트 중..."
          
          # README.md에서 "## 📋 최신 버전 : X.X.X" 부분 업데이트
          sed -i "s/## 📋 최신 버전 : .*/## 📋 최신 버전 : $VERSION/" README.md
          
          echo "✅ README.md 업데이트 완료"

      - name: 변경사항 커밋 및 푸시
        run: |
          VERSION="${{ needs.publish-nexus.outputs.version }}"
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add README.md
          
          if git diff --staged --quiet; then
            echo "📝 README.md에 변경사항이 없습니다"
          else
            git commit -m "README 업데이트 : v$VERSION README.md 버전 정보 업데이트 [skip ci]"
            git push
            echo "✅ README.md 변경사항이 성공적으로 커밋되었습니다"
          fi

      - name: 배포 완료 알림
        run: |
          VERSION="${{ needs.publish-nexus.outputs.version }}"
          echo "🎉 suh-somansa-auth v$VERSION 배포 완료!"
          echo "📦 Nexus Repository: 배포 완료"
          echo "📚 README.md: 최신 버전으로 업데이트 완료"
          echo "🔗 Repository: https://github.com/${{ github.repository }}"